
name: Build modules

on: [push, pull_request]

jobs:
  test:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    env:
      MPY_DIR: ./micropython
      MICROPYTHON_BIN: ./micropython/ports/unix/build-standard/micropython
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    - uses: actions/checkout@v4
      with:
        repository: jonnor/micropython
        path: micropython
        ref: why-mpy-linking2
    - name: Install Python dependencies
      run: pip install -r requirements.txt
    - name: Setup MicroPython X86
      working-directory: micropython
      run: source tools/ci.sh && ci_unix_32bit_setup && ci_unix_standard_build
    - name: Run test and build module x64
      run: make check ARCH=x64 V=1
    - name: Setup MicroPython ARM
      working-directory: micropython
      run: source tools/ci.sh && ci_rp2_setup
    - name: Build module armv6m
      run: echo SKIP make dist ARCH=armv6m V=1
    - name: Build module armv7m
      run: make dist ARCH=armv7m V=1
    - name: Build module armv7emsp
      run: make dist ARCH=armv7emsp V=1
    - name: Setup MicroPython ESP32
      working-directory: micropython
      run: source tools/ci.sh && ci_esp32_idf_setup
    - name: Build module xtensawin
      run: source micropython/esp-idf/export.sh && pip install -r requirements.txt && make dist ARCH=xtensawin V=1
    - name: Archive dist artifacts
      uses: actions/upload-artifact@v3
      with:
        name: dist
        path: |
          dist
    - name: Prepare release
      run: make release
    - name: Archive release artifacts
      uses: actions/upload-artifact@v3
      with:
        name: release
        path: emlearn-micropython-*.zip

    - name: Deploy to Github Pages
      if: "github.ref_name == 'master' || github.ref_type == 'tag'"
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./dist
        keep_files: true
        destination_dir: builds/${{ github.ref_name }}
